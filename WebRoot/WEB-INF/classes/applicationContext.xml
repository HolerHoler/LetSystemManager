<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.let.*">
	</context:component-scan>
	<!-- 02.dbcp 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 03.c3p0 配置数据源 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
		<property name="driverClass" value="${jdbc.driverClassName}"></property> 
		<property name="jdbcUrl" value="${jdbc.url}"></property> <property name="user" 
		value="${jdbc.username}"></property> <property name="password" value="${jdbc.password}"></property> 
		连接池中保留的最小连接数。 <property name="minPoolSize" value="5"> </property> 连接池中保留的最大连接数。Default: 
		15 <property name="maxPoolSize" value="30"> </property> 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 
		3 <property name="initialPoolSize" value="10"> </property> 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 
		0 <property name="maxIdleTime" value="60"> </property> 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 
		3 <property name="acquireIncrement" value="5"> </property> </bean> -->

	<!-- 让Spring去寻找jdbc.properties -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"></property>
	</bean>
	<!-- 让Spring去寻找hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="LoginAction" class="com.let.action.LoginAction" scope="prototype" />
	<bean id="BrokerAction" class="com.let.action.BrokerAction" scope="prototype" />
	<bean id="RenterAction" class="com.let.action.RenterAction" scope="prototype" />
	<bean id="HouseAction" class="com.let.action.HouseAction" scope="prototype" />
	<bean id="LetAction" class="com.let.action.LetAction" scope="prototype" />
	<bean id="BrokerHouseAction" class="com.let.action.BrokerHouseAction"
		scope="prototype" />
	<bean id="AdminAction" class="com.let.action.AdminAction" scope="prototype" />

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	</bean>
</beans>